// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QRList Screen should match the snapshot test 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#030303",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <ViewManagerAdapter_ExpoLinearGradient
    proxiedProperties={
      Object {
        "colors": Array [
          4290261825,
          4292886352,
        ],
        "endPoint": undefined,
        "locations": undefined,
        "startPoint": undefined,
      }
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderBottomColor": "#B83341",
          "borderBottomWidth": 1,
          "justifyContent": "center",
          "paddingBottom": 10,
          "paddingLeft": 24,
          "paddingRight": 24,
          "paddingTop": 33,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#FFFFFF",
            "fontSize": 51,
          },
        ]
      }
    >
      QRCode List
    </Text>
  </ViewManagerAdapter_ExpoLinearGradient>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "paddingBottom": 10,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 10,
          "width": "100%",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#404040",
            "borderRadius": 6,
            "flexBasis": 0,
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Search QRCodes..."
        placeholderTextColor="#DCDCDC"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 52,
              "paddingLeft": 12,
            },
          ]
        }
        testID="input"
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginRight": 7,
            "opacity": 1,
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
        testID="button-clear"
      >
        <Text />
      </View>
    </View>
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#B83341",
          "borderRadius": 6,
          "height": 52,
          "justifyContent": "center",
          "marginLeft": 7,
          "width": 52,
        }
      }
      testID="button-search"
      underlayColor="black"
    >
      <View
        style={
          Object {
            "backgroundColor": "black",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": 6,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <Text />
    </RNGestureHandlerButton>
  </View>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    ListEmptyComponent={[Function]}
    contentContainerStyle={
      Object {
        "padding": 12,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Array [
        Object {},
      ]
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 31,
              "lineHeight": 20,
              "textAlign": "center",
            },
          ]
        }
      >
        You don't have QRCodes yet! Read some to appear in the list!
      </Text>
    </View>
  </RCTScrollView>
</View>
`;
